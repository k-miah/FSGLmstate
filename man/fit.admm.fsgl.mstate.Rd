% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.admm.fsgl.mstate.R
\name{fit.admm.fsgl.mstate}
\alias{fit.admm.fsgl.mstate}
\title{fit.admm.fsgl.mstate}
\usage{
fit.admm.fsgl.mstate(
  X,
  d,
  penalized = NULL,
  unpenalized = NULL,
  K,
  standardize = FALSE,
  trace = TRUE,
  nl,
  nf,
  ng,
  groupsizes,
  penalty.factor = 1,
  lambda = 1,
  alpha,
  gamma,
  rho = 1,
  beta.init = NULL,
  est_algorithm = "gradient.ascent",
  step_size = 0.01,
  est_tol = 1e-06,
  eps_rel = 0.01,
  eps_abs = 1e-04,
  max_iter = 1000
)
}
\arguments{
\item{X}{\link{data frame}: Regression matrix of dimension n x p (=P*Q) with transition-specific covariates}

\item{d}{\link{data frame}: Data set with variables Tstart, Tstop, trans and status (long format data)}

\item{penalized}{\link{data frame}: Regression matrix of dimension n x p (=P*Q) with covariates that should be penalized}

\item{unpenalized}{\link{data frame}: Regression matrix of dimension n x p (=P*Q) with additional covariates that should remain unpenalized}

\item{K}{\link{matrix}: Penalty matrix of dimension M x p (=P*Q)}

\item{standardize}{\link{logic}: Standardization of design matrix X (TRUE: columns divided by standard deviation)}

\item{trace}{\link{logic}: Storage of updates/history at iteration k}

\item{nl}{\link{numeric}: Number of rows of K that encode the lasso penalty (If lasso penalty is applied to all coefficients: p)}

\item{nf}{\link{numeric}: Number of rows of K that encode the fused penalty}

\item{ng}{\link{numeric}: Number of groups for the group penalty}

\item{groupsizes}{\link{vector}: Vector of length ngroups that gives the size of each group in the order they appear in the K matrix (Sum should equal ng)}

\item{penalty.factor}{\link{vector}: Individual penalty scaling factor (default: 1)}

\item{lambda}{\link{numeric}: Overall tuning parameter in \verb{\[0,1\]}}

\item{alpha}{\link{numeric}: Tuning parameter in \verb{\[0,1\]}; controls degree of group (alpha = 0) vs lasso (alpha=1) penalty}

\item{gamma}{\link{numeric}: Tuning parameter in \verb{\[0,1\]}; controls degree of lasso (gamma=1) vs fused (gamma=0) penalty}

\item{rho}{\link{numeric}: Augmented Lagrangian parameter (ADMM step size; default: 1)}

\item{beta.init}{\link{vector}: Initial value of beta (default: 0)}

\item{est_algorithm}{\link{character}: Cox estimation algorithm (default:'gradient.ascent')}

\item{step_size}{\link{numeric}: Cox estimation step size in (0,1) (default: .01)}

\item{est_tol}{\link{numeric}: Tolerance of stopping criterion (partial log-likelihood) for beta estimation (default: 1e-6)}

\item{eps_rel}{\link{numeric}: Relative tolerance for ADMM stopping criterion (default: .01)}

\item{eps_abs}{\link{numeric}: Absolute tolerance for ADMM stopping criterion (default: .0001)}

\item{max_iter[numeric]:}{Maximum number of iterations (default: 1000)}
}
\value{
res \link{list}: Beta estimation at stopping iteration 'num.iter' with history
}
\description{
R-function utilizing ADMM for FSGL-penalized multi-state models for estimation of beta for one set of tuning parameters
}
